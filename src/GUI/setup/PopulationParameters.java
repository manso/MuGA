/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI.setup;

import GUI.DisplayProblem.DisplayPopulation;
import GUI.utils.MuGASystem;
import com.evolutionary.Genetic;
import com.evolutionary.population.MultiPopulation;
import com.evolutionary.population.SimplePopulation;
import com.evolutionary.population.UniquePopulation;
import com.evolutionary.problem.Solution;
import javax.swing.event.EventListenerList;

/**
 *
 * @author zulu
 */
public class PopulationParameters extends javax.swing.JPanel {

    public SimplePopulation myPopulation;

    /**
     * Creates new form PopulationParams
     */
    public PopulationParameters() {
        initComponents();
        initMyComponents();
    }

    public void initMyComponents() {
        selIndividual.load(MuGASystem.INDIVIDUALS, "Default");
        selIndividual.AddEventListener(new GeneticEventListener() {
            @Override
            public void onGeneticChange(Genetic source) {
                btCreatePopulationActionPerformed(null);
            }
        });
        //btCreatePopulationActionPerformed(null);
    }

    public void createPopulation() {
        btCreatePopulationActionPerformed(null);
    }

    public DisplayPopulation getPopulationGraphics() {
        return displayPop.getPopulationGraphics();
    }

    public void setPopulation(SimplePopulation pop, Solution ind) {
        myPopulation = pop.getCleanClone();
        myPopulation.createRandom(ind);

        spPopulationSize.setValue(pop.maximumSize);
        if (pop.getClass() == MultiPopulation.class) {
            rbMultisetPopulation.setSelected(true);
        } else if (pop.getClass() == UniquePopulation.class) {
            rbUniquePopulation.setSelected(true);
        } else {
            rbSimplePopulation.setSelected(true);
        }

        selIndividual.load(MuGASystem.INDIVIDUALS, ind.getName());
        myPopulation.evaluate();
        myPopulation.sort();
        displayPop.setPopulation(myPopulation);
        selIndividual.setSelected(ind.getClass().getSimpleName());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rgPopulationType = new javax.swing.ButtonGroup();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        btCreatePopulation = new javax.swing.JButton();
        spPopulationSize = new javax.swing.JSpinner();
        rbSimplePopulation = new javax.swing.JRadioButton();
        rbUniquePopulation = new javax.swing.JRadioButton();
        rbMultisetPopulation = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        selIndividual = new GUI.setup.GeneticParameter();
        displayPop = new GUI.setup.UIpopulation();

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Population"));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 43, Short.MAX_VALUE)
        );

        btCreatePopulation.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/icons/Population-32.png"))); // NOI18N
        btCreatePopulation.setText("Create");
        btCreatePopulation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCreatePopulationActionPerformed(evt);
            }
        });

        spPopulationSize.setModel(new javax.swing.SpinnerNumberModel(32, 1, null, 8));
        spPopulationSize.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spPopulationSizeStateChanged(evt);
            }
        });

        rgPopulationType.add(rbSimplePopulation);
        rbSimplePopulation.setText("Simple");
        rbSimplePopulation.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                rbSimplePopulationStateChanged(evt);
            }
        });

        rgPopulationType.add(rbUniquePopulation);
        rbUniquePopulation.setText("Unique");
        rbUniquePopulation.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                rbUniquePopulationStateChanged(evt);
            }
        });

        rgPopulationType.add(rbMultisetPopulation);
        rbMultisetPopulation.setSelected(true);
        rbMultisetPopulation.setText("Multiset");
        rbMultisetPopulation.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                rbMultisetPopulationStateChanged(evt);
            }
        });

        jLabel1.setText("Size");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btCreatePopulation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rbMultisetPopulation)
                            .addComponent(rbUniquePopulation)
                            .addComponent(rbSimplePopulation)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(spPopulationSize, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btCreatePopulation, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(spPopulationSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rbSimplePopulation)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbUniquePopulation)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbMultisetPopulation)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        selIndividual.setBorder(javax.swing.BorderFactory.createTitledBorder("Individual"));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(selIndividual, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
            .addComponent(displayPop, javax.swing.GroupLayout.DEFAULT_SIZE, 697, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(selIndividual, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(displayPop, javax.swing.GroupLayout.PREFERRED_SIZE, 81, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btCreatePopulationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCreatePopulationActionPerformed
        //create population
        int size = (Integer) spPopulationSize.getValue();
        if (rbSimplePopulation.isSelected()) {
            myPopulation = new SimplePopulation();
        } else if (rbUniquePopulation.isSelected()) {
            myPopulation = new UniquePopulation();
        } else {
            myPopulation = new MultiPopulation();
        }
        myPopulation.setParameters("" + size);
        myPopulation.createRandom((Solution) selIndividual.genetic);
        myPopulation.evaluate();
        myPopulation.sort();
        //update display
        displayPop.setPopulation(myPopulation);
        //fire event to listeners
        FireEvent(myPopulation);
    }//GEN-LAST:event_btCreatePopulationActionPerformed

    private void spPopulationSizeStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spPopulationSizeStateChanged
        btCreatePopulationActionPerformed(null);
    }//GEN-LAST:event_spPopulationSizeStateChanged

    private void rbSimplePopulationStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_rbSimplePopulationStateChanged
        if (rbSimplePopulation.isSelected()) {
            btCreatePopulationActionPerformed(null);
        }
    }//GEN-LAST:event_rbSimplePopulationStateChanged

    private void rbUniquePopulationStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_rbUniquePopulationStateChanged
        if (rbUniquePopulation.isSelected()) {
            btCreatePopulationActionPerformed(null);
        }
    }//GEN-LAST:event_rbUniquePopulationStateChanged

    private void rbMultisetPopulationStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_rbMultisetPopulationStateChanged
        if (rbMultisetPopulation.isSelected()) {
            btCreatePopulationActionPerformed(null);
        }
    }//GEN-LAST:event_rbMultisetPopulationStateChanged

    //::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: 
//::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: 
//:::::::::::::                E V E  N T   L I S T E N E R  ::::::::::::::::::
//::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: 
//::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: 
    /**
     * List of Listeners
     */
    protected EventListenerList ListenerList = new EventListenerList();

    /**
     * Add an event listener to the list.
     *
     * @param Listener the listener
     */
    public void AddEventListener(PopulationEventListener Listener) {
        ListenerList.add(PopulationEventListener.class, Listener);
    }

    /**
     * Remove an event listener from the list.
     *
     * @param Listener the listener
     */
    public void RemoveEventListener(PopulationEventListener Listener) {
        ListenerList.remove(PopulationEventListener.class, Listener);
    }

    /**
     * Fire the event, tell everyone that something has happened.
     *
     * @param pop
     */
    public void FireEvent(SimplePopulation pop) {
        Object[] Listeners = ListenerList.getListenerList();
        // Process each of the event listeners in turn.
        for (int i = 0; i < Listeners.length; i++) {
            if (Listeners[i] == PopulationEventListener.class) {
                ((PopulationEventListener) Listeners[i + 1]).onPopulationChange(pop);
            }
        }
    }
//::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: 
//::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: 


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCreatePopulation;
    private GUI.setup.UIpopulation displayPop;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JRadioButton rbMultisetPopulation;
    private javax.swing.JRadioButton rbSimplePopulation;
    private javax.swing.JRadioButton rbUniquePopulation;
    private javax.swing.ButtonGroup rgPopulationType;
    private GUI.setup.GeneticParameter selIndividual;
    private javax.swing.JSpinner spPopulationSize;
    // End of variables declaration//GEN-END:variables
}
