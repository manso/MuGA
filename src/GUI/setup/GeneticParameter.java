/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI.setup;

import GUI.utils.MuGAObject;
import com.evolutionary.Genetic;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import javax.swing.event.EventListenerList;
import javax.swing.tree.DefaultMutableTreeNode;

/**
 *
 * @author zulu
 */
public class GeneticParameter extends javax.swing.JPanel {

    public Genetic genetic = null;

    /**
     * Creates new form GeneticSelection
     */
    public GeneticParameter() {
        initComponents();
    }

    public void load(String path, String nodeSelect) {
        txtParameters.addKeyListener(new KeyAdapter() {
            @Override
            public void keyPressed(KeyEvent keyEvent) {
                if (keyEvent.getKeyCode() == KeyEvent.VK_ENTER) {
                    genetic.setParameters(txtParameters.getText().trim());
                    txtInfo.setText(genetic.getInformation());
                    txtParameters.setText(genetic.getParameters());
                    txtInfo.setCaretPosition(0);
                }
            }
        });

        tree.setModel(TreeModelGUI.getModel(path));
        TreeModelGUI.select(tree, nodeSelect);
    }
    
    public void setSelected( String node){
        TreeModelGUI.select(tree, node);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tree = new javax.swing.JTree();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtInfo = new javax.swing.JTextArea();
        txtParameters = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        tree.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                treeValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(tree);

        txtInfo.setEditable(false);
        txtInfo.setColumns(20);
        txtInfo.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        txtInfo.setRows(5);
        jScrollPane2.setViewportView(txtInfo);

        txtParameters.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        txtParameters.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtParametersFocusLost(evt);
            }
        });

        jLabel1.setText("parameters");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 340, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtParameters))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtParameters, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void treeValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_treeValueChanged
        DefaultMutableTreeNode node = (DefaultMutableTreeNode) tree.getLastSelectedPathComponent();
        try {
            genetic = ((MuGAObject) node.getUserObject()).obj;
            txtInfo.setText(genetic.getInformation());
            txtParameters.setText(genetic.getParameters());
            txtInfo.setCaretPosition(0);
            FireEvent(genetic);
        } catch (Exception e) {
        }

    }//GEN-LAST:event_treeValueChanged

    private void txtParametersFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtParametersFocusLost
        genetic.setParameters(txtParameters.getText().trim());
        txtInfo.setText(genetic.getInformation());
        txtParameters.setText(genetic.getParameters());
        txtInfo.setCaretPosition(0);
    }//GEN-LAST:event_txtParametersFocusLost

//::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: 
//::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: 
//:::::::::::::                E V E  N T   L I S T E N E R  ::::::::::::::::::
//::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: 
//::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: 
    /**
     * List of Listeners
     */
    protected EventListenerList ListenerList = new EventListenerList();

    /**
     * Add an event listener to the list.
     *
     * @param Listener the listener
     */
    public void AddEventListener(GeneticEventListener Listener) {
        ListenerList.add(GeneticEventListener.class, Listener);
    }

    /**
     * Remove an event listener from the list.
     *
     * @param Listener the listener
     */
    public void RemoveEventListener(GeneticEventListener Listener) {
        ListenerList.remove(GeneticEventListener.class, Listener);
    }

    /**
     * Fire the event, tell everyone that something has happened.
     *
     * @param obj
     */
    public void FireEvent(Genetic obj) {
        Object[] Listeners = ListenerList.getListenerList();
        // Process each of the event listeners in turn.
        for (int i = 0; i < Listeners.length; i++) {
            if (Listeners[i] == GeneticEventListener.class) {
                ((GeneticEventListener) Listeners[i + 1]).onGeneticChange(obj);
            }
        }
    }
//::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: 
//::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: 


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTree tree;
    private javax.swing.JTextArea txtInfo;
    private javax.swing.JTextField txtParameters;
    // End of variables declaration//GEN-END:variables
}
