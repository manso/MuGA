/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import GUI.setup.SetupSolverDialog;
import GUI.setup.UIpopulation;
import GUI.solver.EvolutionEventListener;
import GUI.solver.UiSolver;
import GUI.statistics.StatisticsChartSimulation;
import GUI.statistics.StatisticsChartSolver;
import com.evolutionary.report.ReportSolver;
import com.evolutionary.solver.EAsolver;
import com.evolutionary.solverUtils.EAsolverArray;
import com.evolutionary.solver.MuGA;
import com.evolutionary.solverUtils.FileSolver;
import java.awt.BorderLayout;
import java.awt.Font;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author zulu
 */
public class ExploreSolver extends javax.swing.JFrame {

    //main meno of this frame
    JFrame mainMenu;

    UiSolver setupSolver = new UiSolver();
    ; // Configuration solver 
    UiSolver runningSolver = new UiSolver(); // running solver

    UIpopulation displayPop;
    StatisticsChartSolver statsPanel;

    /**
     * Creates new form ExploreSolver
     */
    public ExploreSolver(JFrame mainMenu) {
        setExtendedState(JFrame.MAXIMIZED_BOTH);
        initComponents();
        this.mainMenu = mainMenu;
        initMyComponents();
    }

    public void initMyComponents() {
        displayPop = new UIpopulation();
        pnPopulation.add(displayPop, BorderLayout.CENTER);
        setSolver(new MuGA());
        runningSolver.addListener(new EvolutionEventListener() {
            @Override
            public void onEvolutionChanges(EAsolver source) {
                displayPop.updatePopulation(source.parents);
                statsPanel.updateStats(source);
            }

            @Override
            public void onEvolutionComplete(EAsolver source) {
                //   source.updateEvolutionStats();
                onEvolutionChanges(source);
                addSimulationResultTXT(source);
            }
        });

    }

    private void addSimulationResultTXT(EAsolver source) {
        String txt = source.report.getEvolutionString();
        JTextArea txtEvol = new JTextArea(txt);
        txtEvol.setFont(new java.awt.Font("Courier New", 0, 14));
        JScrollPane view = new JScrollPane(txtEvol);
        tpSolver.add("Solver Result", view);
        tpSolver.setSelectedComponent(view);
    }

    public void setSolver(EAsolver newSolver) {
        this.setupSolver.setMySolver(newSolver);
        //setupSolver.getMySolver().startEvolution(false);
        displayPop.setPopulation(setupSolver.getMySolver().parents);
        txtSolver.setText(setupSolver.toString());
        // txtSolver.setText(newSolver.report.getEvolutionString());
//        txtSolver.setCaretPosition(0);
//        if(1 == 1)
//            return;
        //:::::::::::::::::::::::::::::::::::::::::::::::::::::::::
        int selectedIndex = tpSolver.getSelectedIndex();
        // tpSolver.setSelectedComponent(pnPopulation);
        displayPop.setPopulation(newSolver.parents);
        tpSolver.removeAll();
        if (newSolver instanceof EAsolverArray) {
            statsPanel = new StatisticsChartSimulation(newSolver);
        } else {
            statsPanel = new StatisticsChartSolver(newSolver);
        }
        tpSolver.addTab("Setup", pnSetupSolver);
        tpSolver.addTab("Population", pnPopulation);
        int totalTabs = statsPanel.getTabs().getTabCount();
        for (int i = 0; i < totalTabs; i++) {
            tpSolver.addTab(statsPanel.getTabs().getTitleAt(0), statsPanel.getTabs().getComponentAt(0));
        }
        //:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: evolution result txt
        if (!newSolver.report.evolution.isEmpty()) {
            addSimulationResultTXT(newSolver);
        }

        if (selectedIndex < tpSolver.getTabCount()) {
            tpSolver.setSelectedIndex(selectedIndex);
        }
        this.revalidate();
        this.repaint();
        runningSolver.setMySolver(newSolver);
        //::::::::::::::::::::::::::::::::

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btMenu = new javax.swing.JButton();
        btIterateSolver = new javax.swing.JButton();
        sldVelocity = new javax.swing.JSlider();
        btStart = new javax.swing.JButton();
        btRun = new javax.swing.JToggleButton();
        jPanel3 = new javax.swing.JPanel();
        txtPathSimulation = new javax.swing.JLabel();
        pnSolver_Pop = new javax.swing.JPanel();
        tpSolver = new javax.swing.JTabbedPane();
        pnSetupSolver = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        btOpen = new javax.swing.JButton();
        btEdit = new javax.swing.JButton();
        btSave = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtSolver = new javax.swing.JTextArea();
        pnPopulation = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/icons/Main_Menu-32.png"))); // NOI18N
        btMenu.setText("Menu");
        btMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btMenuActionPerformed(evt);
            }
        });

        btIterateSolver.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/icons/Iterate_32.png"))); // NOI18N
        btIterateSolver.setText("step by step");
        btIterateSolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btIterateSolverActionPerformed(evt);
            }
        });

        sldVelocity.setMaximum(10);
        sldVelocity.setBorder(javax.swing.BorderFactory.createTitledBorder("Velocity"));
        sldVelocity.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sldVelocityStateChanged(evt);
            }
        });

        btStart.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/icons/Solver_start_32.png"))); // NOI18N
        btStart.setText("Start simulation");
        btStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btStartActionPerformed(evt);
            }
        });

        btRun.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/icons/Run_32.png"))); // NOI18N
        btRun.setText("Run");
        btRun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRunActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(btStart)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btIterateSolver)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btRun, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(sldVelocity, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                .addComponent(btMenu))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btStart)
                        .addComponent(btIterateSolver)
                        .addComponent(btRun))
                    .addComponent(sldVelocity, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btMenu))
                .addGap(0, 13, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.NORTH);

        txtPathSimulation.setText("./");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txtPathSimulation, javax.swing.GroupLayout.DEFAULT_SIZE, 795, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(txtPathSimulation))
        );

        getContentPane().add(jPanel3, java.awt.BorderLayout.SOUTH);

        pnSolver_Pop.setLayout(new java.awt.BorderLayout());

        pnSetupSolver.setLayout(new java.awt.BorderLayout());

        btOpen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/icons/File_Open-24.png"))); // NOI18N
        btOpen.setText("Open");
        btOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btOpenActionPerformed(evt);
            }
        });

        btEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/icons/Setup_Solver-24.png"))); // NOI18N
        btEdit.setText("Edit");
        btEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEditActionPerformed(evt);
            }
        });

        btSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/icons/File_Save-24.png"))); // NOI18N
        btSave.setText("Save");
        btSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(btOpen, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btSave, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btOpen)
            .addComponent(btEdit)
            .addComponent(btSave)
        );

        pnSetupSolver.add(jPanel6, java.awt.BorderLayout.NORTH);

        txtSolver.setColumns(20);
        txtSolver.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        txtSolver.setRows(5);
        jScrollPane2.setViewportView(txtSolver);

        pnSetupSolver.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        tpSolver.addTab("Solver", pnSetupSolver);

        pnPopulation.setLayout(new java.awt.BorderLayout());
        tpSolver.addTab("Population", pnPopulation);

        pnSolver_Pop.add(tpSolver, java.awt.BorderLayout.CENTER);

        getContentPane().add(pnSolver_Pop, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btMenuActionPerformed
        this.dispose();
        mainMenu.setVisible(true);

    }//GEN-LAST:event_btMenuActionPerformed

    private void btOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btOpenActionPerformed
        JFileChooser file = new JFileChooser();
        file.setCurrentDirectory(new File(txtPathSimulation.getText()));
        file.setSelectedFile(new File(txtPathSimulation.getText()));
        file.setFileFilter(new FileNameExtensionFilter("Muga Simulation Files", FileSolver.FILE_EXTENSION));
        int returnVal = file.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            EAsolver s = FileSolver.load(file.getSelectedFile().getPath());
            txtPathSimulation.setText(file.getSelectedFile().getPath());
            setSolver(s);
        }
    }//GEN-LAST:event_btOpenActionPerformed


    private void btEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEditActionPerformed
        EAsolver s = FileSolver.loadSolver(txtSolver.getText(), txtPathSimulation.getText());
        SetupSolverDialog setup = new SetupSolverDialog(s);
        setSolver(setup.solver);

    }//GEN-LAST:event_btEditActionPerformed

    private void btSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSaveActionPerformed
        JFileChooser file = new JFileChooser(txtPathSimulation.getText());
        file.setCurrentDirectory(new File(txtPathSimulation.getText()));
        file.setSelectedFile(new File(txtPathSimulation.getText()));
        file.setFileFilter(new FileNameExtensionFilter("Muga Simulation Files", FileSolver.FILE_EXTENSION));
        int returnVal = file.showSaveDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            runningSolver.getMySolver().report.save(file.getSelectedFile().getPath());
        }
    }//GEN-LAST:event_btSaveActionPerformed


    private void btIterateSolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btIterateSolverActionPerformed
        btRun.setSelected(false);
        runningSolver.stop();
        runningSolver.iterate();
    }//GEN-LAST:event_btIterateSolverActionPerformed

    private void btStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btStartActionPerformed
        runningSolver.stop();
        initSolver();
        tpSolver.setSelectedIndex(1); // population
        btRun.setSelected(true);
        runningSolver.start();
    }//GEN-LAST:event_btStartActionPerformed

    private void btRunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRunActionPerformed
        if (btStart.isSelected()) {
            runningSolver.stop();
        } else {
            runningSolver.start();
        }

    }//GEN-LAST:event_btRunActionPerformed

    private void sldVelocityStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sldVelocityStateChanged
        runningSolver.setTimeToSleep((10-sldVelocity.getValue())*100);
    }//GEN-LAST:event_sldVelocityStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ExploreSolver.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ExploreSolver.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ExploreSolver.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ExploreSolver.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ExploreSolver(null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btEdit;
    private javax.swing.JButton btIterateSolver;
    private javax.swing.JButton btMenu;
    private javax.swing.JButton btOpen;
    private javax.swing.JToggleButton btRun;
    private javax.swing.JButton btSave;
    private javax.swing.JButton btStart;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel pnPopulation;
    private javax.swing.JPanel pnSetupSolver;
    private javax.swing.JPanel pnSolver_Pop;
    private javax.swing.JSlider sldVelocity;
    private javax.swing.JTabbedPane tpSolver;
    private javax.swing.JLabel txtPathSimulation;
    private javax.swing.JTextArea txtSolver;
    // End of variables declaration//GEN-END:variables

    private void initSolver() {
        EAsolver solver = FileSolver.loadSolver(txtSolver.getText(), ReportSolver.DEFAULT_FILE_NAME);
        int selectedIndex = tpSolver.getSelectedIndex();
        solver.startEvolution(false);
        // tpSolver.setSelectedComponent(pnPopulation);
        displayPop.setPopulation(solver.parents);
        tpSolver.removeAll();
        if (solver instanceof EAsolverArray) {
            statsPanel = new StatisticsChartSimulation(solver);
        } else {
            statsPanel = new StatisticsChartSolver(solver);
        }
        //:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: SETUP and POPULATION
        tpSolver.addTab("Setup", pnSetupSolver);
        tpSolver.addTab("Population", pnPopulation);
        //:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: STATISTICS
        int totalTabs = statsPanel.getTabs().getTabCount();
        for (int i = 0; i < totalTabs; i++) {
            tpSolver.addTab(statsPanel.getTabs().getTitleAt(0), statsPanel.getTabs().getComponentAt(0));
        }

        if (selectedIndex < tpSolver.getTabCount()) {
            tpSolver.setSelectedIndex(selectedIndex);
        }
        this.revalidate();
        this.repaint();
        runningSolver.setMySolver(solver);

    }

}
